name: Archive CI

on:
  push:
    branches:
      - main
      - devel
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
      - devel

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Generate test archives
        run: nix run .#generateTestArchives

      - name: Run tests
        run: nix develop --command cargo test

  publish:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes

      - name: Extract version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Publishing version: $VERSION"

      - name: Verify version matches Cargo.toml
        run: |
          CARGO_VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          TAG_VERSION=${{ steps.get_version.outputs.VERSION }}
          if [ "$CARGO_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Version mismatch!"
            echo "Cargo.toml version: $CARGO_VERSION"
            echo "Git tag version: $TAG_VERSION"
            exit 1
          fi
          echo "Version check passed: $CARGO_VERSION"

      - name: Publish to crates.io
        run: nix develop --command cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
